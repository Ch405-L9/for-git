#!/bin/bash
# Autonomous Scout - One-Command Setup Script
# Usage: bash setup.sh

set -e  # Exit on error

echo "╔════════════════════════════════════════════════════════════╗"
echo "║   AUTONOMOUS DOMAIN SCOUT - Setup Script                  ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored messages
print_success() { echo -e "${GREEN}✓ $1${NC}"; }
print_error() { echo -e "${RED}✗ $1${NC}"; }
print_info() { echo -e "${BLUE}ℹ $1${NC}"; }
print_warning() { echo -e "${YELLOW}⚠ $1${NC}"; }

# Check if Python 3 is installed
echo "Step 1: Checking Python installation..."
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version)
    print_success "Python found: $PYTHON_VERSION"
else
    print_error "Python 3 is not installed"
    echo ""
    echo "Install Python 3 from: https://www.python.org/downloads/"
    exit 1
fi

# Check if pip is installed
echo ""
echo "Step 2: Checking pip installation..."
if command -v pip3 &> /dev/null; then
    print_success "pip found"
else
    print_error "pip is not installed"
    echo ""
    echo "Install pip: sudo apt install python3-pip  (Linux)"
    echo "            brew install python3           (macOS)"
    exit 1
fi

# Install dependencies
echo ""
echo "Step 3: Installing dependencies..."
print_info "This will install: googlesearch-python, aiohttp, aiosqlite"

if pip3 install -r requirements.txt --quiet; then
    print_success "Dependencies installed successfully"
else
    print_error "Failed to install dependencies"
    echo ""
    echo "Try manually: pip3 install googlesearch-python aiohttp aiosqlite"
    exit 1
fi

# Create output directory
echo ""
echo "Step 4: Creating output directories..."
mkdir -p ./output
mkdir -p ./logs
print_success "Directories created: ./output, ./logs"

# Check for API key
echo ""
echo "Step 5: API Key Configuration"
print_warning "You need a Google PageSpeed Insights API key (free)"
echo ""
echo "Get your free API key:"
echo "  1. Go to: https://console.cloud.google.com/apis/credentials"
echo "  2. Enable 'PageSpeed Insights API'"
echo "  3. Create credentials → API Key"
echo "  4. Copy your key"
echo ""

# Prompt for API key (optional - can skip and add later)
read -p "Enter your PSI API key now (or press Enter to skip): " API_KEY

if [ -n "$API_KEY" ]; then
    # Create config file
    cat > config.env << EOF
# Autonomous Scout Configuration
# Generated: $(date)

PSI_API_KEY=$API_KEY
SCORE_LIMIT=60
LOOP_DELAY=3600
DB_PATH=scout_data.db
EOF
    print_success "API key saved to config.env"
    
    # Create convenience script
    cat > run_scout.sh << EOF
#!/bin/bash
# Quick start script - generated by setup

source config.env
python3 autonomous_scout.py --api-key \$PSI_API_KEY --score-limit \$SCORE_LIMIT --loop-delay \$LOOP_DELAY --db-path \$DB_PATH
EOF
    chmod +x run_scout.sh
    print_success "Created run_scout.sh for easy launching"
else
    print_warning "Skipped API key configuration"
    echo "You can run manually: python3 autonomous_scout.py --api-key YOUR_KEY"
fi

# Test the installation
echo ""
echo "Step 6: Testing installation..."
if python3 -c "import aiohttp, aiosqlite; from googlesearch import search" 2>/dev/null; then
    print_success "All dependencies working correctly"
else
    print_error "Some dependencies failed to import"
    exit 1
fi

# Summary
echo ""
echo "╔════════════════════════════════════════════════════════════╗"
echo "║   ✅ SETUP COMPLETE                                        ║"
echo "╚════════════════════════════════════════════════════════════╝"
echo ""
print_success "Installation successful!"
echo ""
echo "📁 Files created:"
echo "   • autonomous_scout.py       (main script)"
echo "   • requirements.txt          (dependencies)"
echo "   • scout_data.db             (will be created on first run)"
echo "   • output/                   (CSV exports)"
echo "   • logs/                     (log files)"
if [ -f "config.env" ]; then
    echo "   • config.env                (your API key - KEEP PRIVATE)"
    echo "   • run_scout.sh              (quick start script)"
fi
echo ""

if [ -f "run_scout.sh" ]; then
    echo "🚀 Quick Start:"
    echo "   ./run_scout.sh"
    echo ""
else
    echo "🚀 Quick Start:"
    echo "   python3 autonomous_scout.py --api-key YOUR_PSI_KEY"
    echo ""
fi

echo "📖 Documentation:"
echo "   • AUTONOMOUS_SCOUT_GUIDE.md (detailed usage)"
echo "   • VERSION_COMPARISON.md     (vs basic scout)"
echo ""

echo "⏱️  What happens next:"
echo "   1. Script discovers business sites via Google"
echo "   2. Scores each site with PageSpeed Insights"
echo "   3. Flags poor performers (< 60 score)"
echo "   4. Exports to flagged_leads.csv"
echo "   5. Repeats every hour (default)"
echo ""

print_info "Stop anytime with Ctrl+C - progress is saved"
echo ""

# Final check - do they want to run now?
if [ -f "run_scout.sh" ]; then
    read -p "Start the scout now? (y/n): " START_NOW
    if [ "$START_NOW" = "y" ] || [ "$START_NOW" = "Y" ]; then
        echo ""
        print_info "Starting Autonomous Scout..."
        echo ""
        ./run_scout.sh
    else
        print_info "Run later with: ./run_scout.sh"
    fi
else
    print_warning "Remember to add your API key when running!"
fi
